#include <iostream>
#include <vector>
#include "functions.h"

using namespace std;

void recursion_for_rearrangements(vector<int>& current_permutation, int index, vector<bool>& used_elements, int max_fixed_points, int fixed_points_count, vector<vector<int>>& generated_permutations)
{
    //Если перестановка уже полностью заполнена
    {
        //Добавляем в наш контейнер с перестановками и завершаем работу функции
        //необходимо ли еще одно условие? посмотрим 
    }
    //Проход каждого элемента перестановки
    {
        //если элемент уже использованный, не заносим его в перестановку
        //если все неподвижные точки уже проставлены, и текущий элемент является неподвижной точкой, не заносим его в перестановку
                //(необходимо ли это условие?)снизу
        //если подвижная точка стоит на своем месте (является неподвижной и противоречит условию генерации), не заносим его в перестановку
        //Если текущий элемент подходит для перестановки, вставляем элемент в нее
        //Вызов рекурсии
        //Откат для обхода и новых вариантов перестановки
    }

}

int main()
{
    //вызов функции по обработке входного файла
    //вызов главной рекурсивной вычислительной функции
    // 
    // 
    //запись ответа в выходной файл(прописать здесь псевдокод)
}

