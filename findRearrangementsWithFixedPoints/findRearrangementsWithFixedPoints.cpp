#include <iostream>
#include <vector>
#include "functions.h"

using namespace std;

void generate_rearrangements(vector<int>& current_permutation, int index, vector<bool>& used_elements, int max_fixed_points, int fixed_points_count, vector<vector<int>>& generated_permutations)
{
    //Если перестановка уже полностью заполнена и в ней присутствует заданное количество неподвижных точек
    {
        //Добавить сгенерированную перестановку в контейнер с перестановками и начать генерацию новой перестановки
    }
    //Для каждого элемента перестановки
    {
        //Если элемент уже использованный, не заносим его в перестановку
            //Иначе если все неподвижные точки уже проставлены, и текущий элемент является неподвижной точкой, не заносим его в перестановку
                //Иначе если подвижная точка стоит на своем месте (является неподвижной и противоречит условию генерации), не заносим его в перестановку
                    //Иначе Если текущий элемент подходит для перестановки, вставляем элемент в нее
        
        //Вызов рекурсии
        
        //Откат для обхода и новых вариантов перестановки
    }

}

int main()
{
    //вызов функции по обработке входного файла
    //вызов главной рекурсивной вычислительной функции
    // 
    // Открыть выходной файл
    // Проверить, что файл доступен для записи. Если доступен
        //Записать количество сгенерированных перестановок и сами перестановки
        //Закрыть выходной файл
    //Иначе
        //Вывести ошибку о невозможности открытия выходного файла в стандартный поток ошибок
}

